// Mocks generated by Mockito 5.4.6 from annotations
// in beat_the_heat/test/home_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:beat_the_heat/models/weather_data.dart' as _i4;
import 'package:beat_the_heat/services/weather_service.dart' as _i2;
import 'package:geolocator/geolocator.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [WeatherService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherService extends _i1.Mock implements _i2.WeatherService {
  MockWeatherService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.WeatherData?> getCurrentWeather(
    double? latitude,
    double? longitude,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentWeather, [latitude, longitude]),
            returnValue: _i3.Future<_i4.WeatherData?>.value(),
          )
          as _i3.Future<_i4.WeatherData?>);

  @override
  _i3.Future<List<_i4.WeatherData>> getForecast(
    double? latitude,
    double? longitude, {
    int? days = 7,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getForecast,
              [latitude, longitude],
              {#days: days},
            ),
            returnValue: _i3.Future<List<_i4.WeatherData>>.value(
              <_i4.WeatherData>[],
            ),
          )
          as _i3.Future<List<_i4.WeatherData>>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [Geolocator].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeolocator extends _i1.Mock implements _i5.Geolocator {
  MockGeolocator() {
    _i1.throwOnMissingStub(this);
  }
}
